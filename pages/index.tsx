import type { GetServerSideProps, InferGetServerSidePropsType, NextPage } from 'next'
import Head from 'next/head'
import Layout from '../components/layout'
import Homepage from '../components/home'
import axios from './../utility/axios';
import { Ride } from './../utility/interface';
import date from 'date-and-time';

export const getServerSideProps: GetServerSideProps = async () => {
  const getUser = axios.get('/user');
  const getRides = axios.get('/rides');

  let [{ data: user }, { data: rides }] = await Promise.all([getUser, getRides]);

  const today = +new Date();

  let filterOptions: { [key: string]: string[] | any } = {};
  let pastCount = 0;

  function fillFilterOptions(state: string, city: string) {
    if (!Object.keys(filterOptions).includes(state)) {
      filterOptions[state] = new Set<string>();
    }
    filterOptions[state].add(city);
  }

  rides = rides.map((ride: Ride) => {
    fillFilterOptions(ride.state, ride.city);

    let closestStation = ride
      .station_path
      .reduce((s1: number, s2: number) =>
        Math.abs(s2 - user.station_code) < Math.abs(s1 - user.station_code)
          ? s2 : s1
      );

    let past = +date.parse(ride.date, 'MM/DD/YYYY hh:mm A') < today;

    if (past) {
      pastCount += 1;
    }

    return {
      ...ride,
      distance: Math.abs(closestStation - user.station_code),
      closest_station: closestStation,
      past: past
    };
  }).sort((r1: Ride, r2: Ride) => r1.distance - r2.distance);

  Object.keys(filterOptions).map(s => {
    filterOptions[s] = [...filterOptions[s]]
  });

  // will be passed to the page component as props
  return {
    props: {
      user: user,
      ridesData: {
        rides: rides,
        filterOptions: filterOptions,
        pastCount: pastCount
      }
    },
  }
}

const Home: NextPage = ({ user, ridesData }: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  return (
    <>
      <Head>
        <title>Edvora Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout user={user} main={<Homepage userStation={user.station_code} ridesData={ridesData} />} />
    </>
  )
}

export default Home
